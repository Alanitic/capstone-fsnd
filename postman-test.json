{
	"info": {
		"_postman_id": "6ce34d17-a023-4840-a914-d19afbdff5aa",
		"name": "Capstone-FSND",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Casting Assistant",
			"item": [
				{
					"name": "Get all actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/actors",
							"host": [
								"{{url}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/movies",
							"host": [
								"{{url}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"Alan\",\n    \"age\":25,\n    \"gender\":\"Male\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/actors",
							"host": [
								"{{url}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Flaskman\",\n    \"release_date\": \"2021-05-26 11:34:17\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/movies",
							"host": [
								"{{url}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update actor",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Alan\",\n    \"age\": 25,\n    \"gender\": \"Male\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/actors/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Flaskman\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/movies/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/actors/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"actors",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://{{url}}:5000/movies/2",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "5000",
							"path": [
								"movies",
								"2"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Iml2a09JR1YxVnZwUEVpTVN0MTl0YSJ9.eyJpc3MiOiJodHRwczovL2ZzZG5kLWFsYW4udXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDYwYjdhMjk3YjZkNzUyMDA2OGVhNTAyZiIsImF1ZCI6ImNhc3RpbmctYWdlbmN5IiwiaWF0IjoxNjIzMTY4MjUxLCJleHAiOjE2MjMyNTQ2NTEsImF6cCI6Ilo2Rk5GT1dtOVlvYmVHUm56UzF5QkJyZU80cEQ5RktLIiwic2NvcGUiOiIiLCJwZXJtaXNzaW9ucyI6WyJnZXQ6YWN0b3JzIiwiZ2V0Om1vdmllcyJdfQ.Ff0rqajqJroVOxBCkbZstIq16uYLgWifhIoYozi4VBybhD0n1bZFo8NwMMKA7_A4N25mZ-pQHD6xVC-k9zvwozsPYwYhRHOmMweJyC2_L6u1PmmSzKZjPzoQ3oDzdHSu-kBzIX1xmklsBvV0EYKIgQwiSTkW_Kvik7fl3-JKecSSVxUHIVChv0DkiUqC8YOb8VRL3RVJK6xqaXXa04LDQdJWJTzxYq2tr1puRKg8va6_texibGqHn1uxK6H8kEqdeS3S1IBmWuxXA9McQKmfcSb2m2HW8zb3IV4YsjgfpSD3NrS_hKjPmm_-DGPTdLeJYDX1ERPMXpJ4hLXr-4njfg",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Casting Director",
			"item": [
				{
					"name": "Get all actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/actors",
							"host": [
								"{{url}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/movies",
							"host": [
								"{{url}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"Example\",\n    \"age\":25,\n    \"gender\":\"Male\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/actors",
							"host": [
								"{{url}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/movies",
							"host": [
								"{{url}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Alan\",\n    \"age\": 25,\n    \"gender\": \"Male\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/actors/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Flaskman\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/movies/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/actors/5",
							"host": [
								"{{url}}"
							],
							"path": [
								"actors",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/movies/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"movies",
								"2"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Iml2a09JR1YxVnZwUEVpTVN0MTl0YSJ9.eyJpc3MiOiJodHRwczovL2ZzZG5kLWFsYW4udXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDYwYjdhNWVhMzhkNDlhMDA2OTJiM2JkOSIsImF1ZCI6ImNhc3RpbmctYWdlbmN5IiwiaWF0IjoxNjIzMTY4NDAyLCJleHAiOjE2MjMyNTQ4MDIsImF6cCI6Ilo2Rk5GT1dtOVlvYmVHUm56UzF5QkJyZU80cEQ5RktLIiwic2NvcGUiOiIiLCJwZXJtaXNzaW9ucyI6WyJkZWxldGU6YWN0b3IiLCJnZXQ6YWN0b3JzIiwiZ2V0Om1vdmllcyIsInBhdGNoOmFjdG9yIiwicGF0Y2g6bW92aWUiLCJwb3N0OmFjdG9yIl19.AMSvpUWCS7EqTqfBKF4ErqannY2mIah89cNSLFgcqDSgsHCxxEfV7UzJm1V8j4Y1GBPgR4YXdDf7vxBf53bk6SNV7mz0OxR10AOgoNRKBTvMDYo6w-oxZssX1nmlxWaq8vkyV_AsoO59NtuQuOdMQUlaqqcCuYKdHl0lnq8DxIl3GV-8XV6Eu6x_gg9KWGz3G7a0UOHDulCrXwPjv3MO__2aunOmEPo41rQtA8MUtO7KAEJj_Vs9IJp_eseUTeY-mfVl2-Oc3ZZePre6eGk9bIVandlcbhod4HSHfEqg6REIna1iWq0StaG_Z6FKZmbkLQLPNKlmBsGIDuUfjZ-Z7A",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Executive Producer",
			"item": [
				{
					"name": "Get all actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/actors",
							"host": [
								"{{url}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/movies",
							"host": [
								"{{url}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"Alan\",\n    \"age\":25,\n    \"gender\":\"Male\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/actors",
							"host": [
								"{{url}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Just an example\",\n    \"release_date\": \"2021-05-26 11:34:17\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/movies",
							"host": [
								"{{url}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Exmaple 2\",\n    \"age\": 25,\n    \"gender\": \"Male\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/actors/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Flaskman\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/movies/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/actors/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/movies/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Iml2a09JR1YxVnZwUEVpTVN0MTl0YSJ9.eyJpc3MiOiJodHRwczovL2ZzZG5kLWFsYW4udXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDYwYjdhY2E2NmI3MTg2MDA2OWMzZTkwNyIsImF1ZCI6ImNhc3RpbmctYWdlbmN5IiwiaWF0IjoxNjIzMTY4NDgxLCJleHAiOjE2MjMyNTQ4ODEsImF6cCI6Ilo2Rk5GT1dtOVlvYmVHUm56UzF5QkJyZU80cEQ5RktLIiwic2NvcGUiOiIiLCJwZXJtaXNzaW9ucyI6WyJkZWxldGU6YWN0b3IiLCJkZWxldGU6bW92aWUiLCJnZXQ6YWN0b3JzIiwiZ2V0Om1vdmllcyIsInBhdGNoOmFjdG9yIiwicGF0Y2g6bW92aWUiLCJwb3N0OmFjdG9yIiwicG9zdDptb3ZpZSJdfQ.23A6gmoqLJL2u1r4hlkK3gMZZKoz5Rvz1K_3EFjnMbNWwZ2Gb6DepHsUUzMPWt7Xyt1mt1hvkPQHkHLRCadAJe_QWO_SnfrWlYnueqy8bikIz91uRhcD5KZZoL5ZUZiUfSHFEREEZfSBFoPAtwfPZaU60p5sULh8SbiK7vXkFVaraRTZdTXpCHlxhtxTd4bOMyZ4IECndGvJYefHLR4fi-iIR2LehItiJwK_x29eJA8QkMzfWczcMbsULngLVZIIEFM9O8XkOpfhI72ZAeq_xUHsngIQZMSLrVhOrJz2T9vdy1r8uTl_9sfio56_7EMqQrsrvntrtOBy0J8Enf_LRA",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Error",
			"item": [
				{
					"name": "Get actors without token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/actors",
							"host": [
								"{{url}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get actors with manipulated token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Iml2a09JR1YxVnZwUEVpTVN0MTl0YSJ9.eyJpc3MiOiJodHRwczovL2ZzZG5kLWFsYW4udXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDYwYjdhMjk3YjZkNzUyMDA2OGVhNTAyZiIsImF1ZCI6ImNhc3RpbmctYWdlbmN5IiwiaWF0IjoxNjIzMTY4MjUxLCJleHAiOjE2MjMyNTQ2NTEsImF6cCI6Ilo2Rk5GT1dtOVlvYmVHUm56UzF5QkJyZU80cEQ5RktLIiwic2NvcGUiOiIiLCJwZXJtaXNzaW9ucyI6WyJnZXQ6YWN0b3JzIiwiZ2V0Om1vdmllcyIsICJwb3N0OmFjdG9yIl19.Ff0rqajqJroVOxBCkbZstIq16uYLgWifhIoYozi4VBybhD0n1bZFo8NwMMKA7_A4N25mZ-pQHD6xVC-k9zvwozsPYwYhRHOmMweJyC2_L6u1PmmSzKZjPzoQ3oDzdHSu-kBzIX1xmklsBvV0EYKIgQwiSTkW_Kvik7fl3-JKecSSVxUHIVChv0DkiUqC8YOb8VRL3RVJK6xqaXXa04LDQdJWJTzxYq2tr1puRKg8va6_texibGqHn1uxK6H8kEqdeS3S1IBmWuxXA9McQKmfcSb2m2HW8zb3IV4YsjgfpSD3NrS_hKjPmm_-DGPTdLeJYDX1ERPMXpJ4hLXr-4njfg",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/actors",
							"host": [
								"{{url}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}